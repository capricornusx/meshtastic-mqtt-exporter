name: Build and Test

on:
  push:
    tags-ignore:
      - '**'
    branches:
      - '**'

permissions:
  contents: read
  pull-requests: read

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'

      - name: Build standalone
        run: go build -v -o meshtastic-exporter ./cmd/standalone

      - name: Build embedded with hook
        run: go build -v -o meshtastic-exporter-embedded ./cmd/embedded-hook

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          # Optional: show only new issues if it's a pull request. The default value is `false`.
          only-new-issues: true

      - name: Test with coverage
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Upload coverage report
        uses: codecov/codecov-action@v5
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/release/'
        env:
          token: ${{ secrets.CODECOV_TOKEN }}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          COMMIT_SHA: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
        with:
          files: ./coverage.txt
          flags: unittests
          fail_ci_if_error: true
          verbose: true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: |
            meshtastic-exporter
            meshtastic-exporter-embedded